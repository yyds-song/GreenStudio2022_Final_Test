<!DOCTYPE html>

<html>

<head>

<meta charset="utf-8">

<title>绿荫考核</title>
  <style>
    p{
      text-indent:2em;
      line-height:25px;
font-size:20px;
    }
    div{
      color:red;
    }
body{
background-image:url(.....)
}
  </style>

</head>

<body>

	<h1>我誓要加入绿荫！！</h1>
  <h3>目录</h3>
  1.<a href="jieshao">自我介绍</a><br />
  2.<a href="yuanyin">加入原因</a><br />
  3.<a href="jihua">未来计划</a><br />
  4.<a href="qiwang">未来期望</a><br />

  <h4 id=“jieshao”>自我介绍</h4>

	<p>我是来自计嵌2201班的宋福，我算是一个性格乐观，积极向上，富有耐心，乐于与人交流，有较高的沟通能力，注重团队合作的人了，同样我的适应能力也很强，能应对各种突发情况，平时也爱好听音乐，打球类运动，都有所涉及，但我最喜欢的是篮球，虽然自身的技术还不算是特别厉害，但我十分热爱，希望能和学长学姐一起沟通交流。</p>

  <h4 id="yuanyin">为什么想加入绿荫</h4>

  <p>首先，我是计算机专业的一位新生，加入绿荫组织能有效锻炼自己的能力，能够有更多的实践操作机会，也可以学习到更多的计算机编程的知识，丰富自身，同时我也希望能够结识更多的学长学姐一起进步，在大一大二阶段C语言开始编程入门，数据结构开始可以让我接触算法思想，计算机网络，计算机组成原理，这些也非常重要，老师自然也会讲。但是仅对于这些专业课是完全不够的，对学校来说，他们开的课程其实只是为了满足他们的教学大纲，很多东西，或者说现在潮流的东西老师讲不到，如果讲得到可能也是在大三大四选修课去了。基础课固然重要，但是大一大二在完成基础课的前提下，如果能多学点技术，那么收获是非常巨大的。然后就是跟学姐交流过后，让我真正了解的绿荫，绿荫的学习氛围是我一直向往的，大家一起共同进步学习，同时绿荫大课堂也可以教授我们更多的知识，进行更加深度的学习，更强自身软实力，绿荫也会为我们提供还有做不完的项目，这都是满满的实践机会，如果有更高的追求还有机会与老师做科研，这些都是我十分向往的，也只能绿荫能给我带来的，所以我十分想加入绿荫，在绿荫这个大集体中学习。</p>

  <h4 id="jihua">未来的计划</h4>

  <p>我对未来的规划，首先把学分绩点合格，能安全毕业，然后想学习更多的计算机专业的知识，像html，md，C++，java等能有更深的理解，在大学四年里，大一大二阶，让夯实自己的计算机基础知识，只要基础牢固才能更好的深入学习，这也就是本手与妙手的关系，而不至于俗手。至少计算机各个方面要去了解，所以需要自己多自我学习，网课，请教学长学姐都可以，另外，最主要的，早点学会做笔记，良好的笔记能帮我迅速掌握上课内容，同样多多实践，锻炼自己的实际操作能力。说实话，如果大学出去要找工作做兼职，大学那些基础课内容是完全不够的，所以更需要自己的努力。，学习足够多的知识。同样人是社会性动物，在求学的路上能结实一群志同道合，可以经常联系的知心朋友也是一件十分幸运的事，，抓住一切能丰富自身，增强自身的机会，而我认为加入绿荫组织可以为我带来很多未知的知识，让我能更快的进步。</p>
    <h4 id="qiwang">对未来的期望</h4>
  <div>最大的期望：</div><p>便是绿荫组织能把我收了。<br>然后便是安全度过四六级，经过一学期的努力，不求让自己多满意，起码不要留下遗憾，还有就是如果有幸加入绿荫，我定会更加的努力学习，得到各位学长学姐的认可，不辜负组织对我的期望，让大家知道选择我是个正确的选择。</p>
  

</body>

</html>
//01背包问题
#include<bits/stdc++.h>
using namespace std;

int w[35],c[35];
int dp[35][205];//创建二维数组

int main()
{
    int m,n,i,j;//j背包空间i物品序号m是最大的背包空间n是最大的序号
    cin>>m>>n;
    
    for(i=1; i<=n; ++i)//输入
    cin>>w[i]>>c[i];//w[]物品的质量 c[]物品的价值
    
    for(i=1; i<=n; ++i)//循环
    {
        for(j=1; j<=m; ++j)//循环
        {
            if(j < w[i])
               dp[i][j] = dp[i-1][j];//如果此物品的质量大于背包空间则不选择该物品
            else              //所以与上一个价值相同
               dp[i][j] = max(dp[i-1][j], dp[i-1][j-w[i]] + c[i]);
        }  //选择最大值。如果选择该物品，则背包空间需减去此物品质量
    }                //此时的背包中物品最大价值为该物品自身价值再加上减去该质量后的最大价值。
    cout<<dp[n][m];//输出
    return 0;
}
  //相应背包中物品价值的最大值 如果背包容量为10
//0 0 0 0 0 0 0 0 0 0 0   重量2 3 4 7
//0 0 1 1 1 1 1 1 1 1 1   价值1 3 5 9
//0 0 3 3 4 4 4 4 4 4 4
//0 0 1 3 5 5 6 8 8 9 9
//0 0 1 3 5 5 6 9 9 10 12


//检验完全数
#include <iostream>
using namespace std;
bool wanshu(int n){
int i, s=0;
for(i = 1;i<n;i++){//循环
if(n % i == 0){//用n如果可以除尽，及i为n的因数保留下来
s += i;//把所以的因数相加
}
}
if(s == n){//如果因数和为n则此数为完全数
return 1;
}else {
return 0;
}
}
int main(){
int n;
cin >> n;//输入
if(wanshu(n)){//if的函数，符合输出yes，不符合输出no
cout << "yes" << endl;
}
else {
cout << "no" << endl;
}
return 0;
}

//冒泡排序
#include <iostream>
using namespace std;
// 主函数
int main(int argc, char *argv[])
{
int arr[]={ 1,3,5,7,9,2,4,6,8};//随机的一个数组
int cnt = sizeof(arr) / sizeof(int);
//双循环，相邻位比大小
for (int i = 0;i < cnt;++i)
{
for (int j = 0;j < cnt - 1 - i;++j)
{
if (arr[j]>arr[j + 1])//如果前者大于后者
{
//交换顺序
int temp = arr[j];//临时变量temp，相当于数据的中转站
arr[j] = arr[j + 1];
arr[j+ 1] = temp;
}
}
}
//从小排
for (int i = 0; i < cnt; ++i)
cout << arr[i] << " ";
cout << endl;
return 0;
}
    



